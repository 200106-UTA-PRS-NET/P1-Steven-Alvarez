// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaBox.Domain.Entities;

namespace PizzaBox.Domain.Migrations
{
    [DbContext(typeof(PizzaBoxDbContext))]
    [Migration("20200130151158_PizzaBoxDB")]
    partial class PizzaBoxDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PizzaBox.Domain.Entities.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("AddressId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("PizzaBox.Domain.Entities.Cheese", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<decimal?>("Price")
                        .HasColumnName("price")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("UQ__Cheeses");

                    b.ToTable("Cheese","PizzaBox");
                });

            modelBuilder.Entity("PizzaBox.Domain.Entities.Crust", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<decimal?>("Price")
                        .HasColumnName("price")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("UQ__Crusts");

                    b.ToTable("Crust","PizzaBox");
                });

            modelBuilder.Entity("PizzaBox.Domain.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("order_date")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("StoreId")
                        .HasColumnName("store_id")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCost")
                        .HasColumnName("total price")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("StoreId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders","PizzaBox");
                });

            modelBuilder.Entity("PizzaBox.Domain.Entities.OrderP", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnName("order_id")
                        .HasColumnType("int");

                    b.Property<int>("PizzaId")
                        .HasColumnName("pizza_id")
                        .HasColumnType("int");

                    b.Property<int?>("Count")
                        .HasColumnName("count")
                        .HasColumnType("int");

                    b.Property<int>("OrderPizzaId")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "PizzaId")
                        .HasName("PK__Order_Piz");

                    b.HasIndex("PizzaId");

                    b.ToTable("Order_Pizzas","PizzaBox");
                });

            modelBuilder.Entity("PizzaBox.Domain.Entities.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CheeseId")
                        .HasColumnName("cheese id")
                        .HasColumnType("int");

                    b.Property<int?>("CrustId")
                        .HasColumnName("crust id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int?>("SauceId")
                        .HasColumnName("sauce id")
                        .HasColumnType("int");

                    b.Property<int?>("SizeId")
                        .HasColumnName("size id")
                        .HasColumnType("int");

                    b.Property<int?>("ToppingId")
                        .HasColumnName("topping id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CheeseId");

                    b.HasIndex("CrustId");

                    b.HasIndex("SauceId");

                    b.HasIndex("SizeId");

                    b.HasIndex("ToppingId");

                    b.ToTable("Pizzas","PizzaBox");
                });

            modelBuilder.Entity("PizzaBox.Domain.Entities.Sauce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<decimal?>("Price")
                        .HasColumnName("price")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("UQ__Sauces");

                    b.ToTable("Sauces","PizzaBox");
                });

            modelBuilder.Entity("PizzaBox.Domain.Entities.Size", b =>
                {
                    b.Property<int>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Price")
                        .HasColumnName("price")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("SizeId");

                    b.HasIndex("SizeName")
                        .IsUnique()
                        .HasName("UQ__Sizes");

                    b.ToTable("Sizes","PizzaBox");
                });

            modelBuilder.Entity("PizzaBox.Domain.Entities.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("StoreId");

                    b.HasIndex("AddressId");

                    b.HasIndex("StoreName")
                        .IsUnique()
                        .HasName("UQ__Stores");

                    b.HasIndex("UserId");

                    b.ToTable("Stores","PizzaBox");
                });

            modelBuilder.Entity("PizzaBox.Domain.Entities.StoreP", b =>
                {
                    b.Property<int>("StoreId")
                        .HasColumnName("store id")
                        .HasColumnType("int");

                    b.Property<int>("PizzaId")
                        .HasColumnName("pizza id")
                        .HasColumnType("int");

                    b.HasKey("StoreId", "PizzaId")
                        .HasName("PK__Store_Piz");

                    b.HasIndex("PizzaId");

                    b.ToTable("Store","PizzaBox");
                });

            modelBuilder.Entity("PizzaBox.Domain.Entities.Toppings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("UQ__Toppings")
                        .HasFilter("[name] IS NOT NULL");

                    b.ToTable("Toppings","PizzaBox");
                });

            modelBuilder.Entity("PizzaBox.Domain.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasName("UQ__Users");

                    b.ToTable("Users","PizzaBox");
                });

            modelBuilder.Entity("PizzaBox.Domain.Entities.Order", b =>
                {
                    b.HasOne("PizzaBox.Domain.Entities.Store", "Store")
                        .WithMany("Order")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK__Orders__store_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaBox.Domain.Entities.Users", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Orders__user_id")
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaBox.Domain.Entities.OrderP", b =>
                {
                    b.HasOne("PizzaBox.Domain.Entities.Order", "Order")
                        .WithMany("OrderPizza")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__Order_Piz__order")
                        .IsRequired();

                    b.HasOne("PizzaBox.Domain.Entities.Pizza", "Pizza")
                        .WithMany("OrderPizzas")
                        .HasForeignKey("PizzaId")
                        .HasConstraintName("FK__Order_Piz__pizza")
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaBox.Domain.Entities.Pizza", b =>
                {
                    b.HasOne("PizzaBox.Domain.Entities.Cheese", "Cheese")
                        .WithMany("Pizzas")
                        .HasForeignKey("CheeseId")
                        .HasConstraintName("FK__Pizzas__cheese_id");

                    b.HasOne("PizzaBox.Domain.Entities.Crust", "Crust")
                        .WithMany("Pizzas")
                        .HasForeignKey("CrustId")
                        .HasConstraintName("FK__Pizzas__crust_id");

                    b.HasOne("PizzaBox.Domain.Entities.Sauce", "Sauce")
                        .WithMany("Pizzas")
                        .HasForeignKey("SauceId")
                        .HasConstraintName("FK__Pizzas__sauce_id");

                    b.HasOne("PizzaBox.Domain.Entities.Size", "Size")
                        .WithMany("Pizza")
                        .HasForeignKey("SizeId")
                        .HasConstraintName("FK__Pizzas__size_id");

                    b.HasOne("PizzaBox.Domain.Entities.Toppings", "Topping")
                        .WithMany("PizzasTopping")
                        .HasForeignKey("ToppingId")
                        .HasConstraintName("FK__Pizzas__topping");
                });

            modelBuilder.Entity("PizzaBox.Domain.Entities.Store", b =>
                {
                    b.HasOne("PizzaBox.Domain.Entities.Address", "Address")
                        .WithMany("Store")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaBox.Domain.Entities.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaBox.Domain.Entities.StoreP", b =>
                {
                    b.HasOne("PizzaBox.Domain.Entities.Pizza", "Pizza")
                        .WithMany("StorePizzas")
                        .HasForeignKey("PizzaId")
                        .HasConstraintName("FK__Store_Piz")
                        .IsRequired();

                    b.HasOne("PizzaBox.Domain.Entities.Store", "Store")
                        .WithMany("StorePizzas")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK__Store_Piz__store")
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaBox.Domain.Entities.Users", b =>
                {
                    b.HasOne("PizzaBox.Domain.Entities.Address", null)
                        .WithMany("Users")
                        .HasForeignKey("AddressId");
                });
#pragma warning restore 612, 618
        }
    }
}
